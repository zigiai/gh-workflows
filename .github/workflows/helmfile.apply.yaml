name: Helmfile Deploy
on:
  workflow_call:
    inputs:
      release:
        description: Helmfile release name to deploy
        required: true
        type: string
      environment:
        description: Deploy environment (i.e. helmfile evironment)
        required: true
        type: string
      runner:
        description: Specifies the deploy runner tag
        required: true
        type: string
      tag:
        description: Helmfile release tag to deploy
        required: true
        type: string
      labels:
        description: Helmfile additional label selectors
        required: false
        type: string
      concurrency:
        description: Process the given number of simultaneous release at a time (scoped by a single helmfile)
        required: false
        default: 20
        type: number
      helm-infra-ref:
        description: Specifies helm-infra ref
        default: master
        required: false
        type: string
    secrets:
      helm-infra-token:
        description: GitHub token to clone helm-infra
        required: true

jobs:
  deploy:
    name: Apply
    runs-on: [self-hosted, deployer, '${{ inputs.runner }}']
    container:
      image: dysnix/kubectl:v1.20-gcloud

    env:
      # github actions secret (w/ kubeconfig)
      secret: zigiai-${{ inputs.environment }}-infra-github-actions
      environment: ${{ inputs.environment }}
      selector: name=${{ inputs.release }},${{ inputs.labels }}
      IMAGE_TAG: ${{ inputs.tag }}

    steps:
      -
        uses: actions/github-script@v5
        id: set
        with:
          script: |
            //js
            // job outcomes choice
            core.setOutput('jobOutcomes', '{"cancelled":"failure","failure":"failure","success":"success"}')
            //!js
      -
        uses: actions/checkout@v2
        with:
          repository: zigiai/helm-infra
          ref: ${{ inputs.helm-infra-ref }}
          token: ${{ secrets.helm-infra-token }}
      -
        name: Map Environment to Project ID
        id: envToProject
        uses: mikefarah/yq@master
        with:
          cmd: yq eval -o=j '.envToProject' .github/config.yaml
      -
        name: Deployment Info
        run: |
          echo "==> Environment: $environment"
          echo "==> Selectors: ${selector%,}"
          echo "==> Image Tag: $IMAGE_TAG"
      -
        uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        if: env.environment != ''
        with:
          token: ${{ github.token }}
          environment: ${{ env.environment }}
      -
        name: Helmfile Apply
        id: deploy
        if: env.environment != ''
        env:
          project_id: ${{ fromJson(steps.envToProject.outputs.result)[env.environment] }}

        run: |
          ## setup ~/.kube/config
          ## Helmfile environment corresponds to the cluster in the secret! (ex clusters.stage etc)
          ./scripts/fetch-kubeconfig $secret $environment $project_id

          ## Update repos and manually update chart dependencies (if any)
          UPDATE_REPOS=y helmfile -e $environment repos
          if [ -d charts/${{ inputs.release }} ]; then
            helm dependency update charts/${{ inputs.release }} --skip-refresh
          fi

          ## Run the deployment concurrently and skip all dependency managment
          helmfile -e $environment -l ${selector%,} apply --concurrency ${{ inputs.concurrency }} --skip-deps
      -
        if: always() && env.environment != ''
        name: Update deployment status
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: ${{ fromJSON(steps.set.outputs.jobOutcomes)[job.status] }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
